package code.sakarias.userservice;import code.sakarias.userservice.role.Role;import code.sakarias.userservice.service.UserService;import code.sakarias.userservice.user.AppUser;import java.util.ArrayList;import org.springframework.boot.CommandLineRunner;import org.springframework.boot.SpringApplication;import org.springframework.boot.autoconfigure.SpringBootApplication;import org.springframework.context.annotation.Bean;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.security.crypto.password.PasswordEncoder;@SpringBootApplicationpublic class UserserviceApplication {  public static void main(String[] args) {  SpringApplication.run(UserserviceApplication.class, args);  }  @Bean  PasswordEncoder passwordEncoder () {    return new BCryptPasswordEncoder();  }@Bean  CommandLineRunner run(UserService userService) {    return args -> {      userService.saveRole(new Role(null, "ROLE_USER"));      userService.saveRole(new Role(null, "ROLE_MANAGER"));      userService.saveRole(new Role(null, "ROLE_ADMIN"));      userService.saveRole(new Role(null, "ROLE_SUPER_ADMIN"));      userService.saveUser(new AppUser(null, "Peter Petterson", "peter", "1234", true, new ArrayList<>()));      userService.saveUser(new AppUser(null, "Per Person", "per", "1234", true, new ArrayList<>()));      userService.saveUser(new AppUser(null, "Anders Anderson", "anders", "1234", true, new ArrayList<>()));      userService.saveUser(new AppUser(null, "Andreas Andreassen", "andreas", "1234", true, new ArrayList<>()));      userService.saveUser(new AppUser(null, "Paul Paulsen", "paul", "1234", true, new ArrayList<>()));      userService.saveUser(new AppUser(null, "admin", "admin", "1234", true, new ArrayList<>()));      userService.addRoleToUser("peter", "ROLE_USER");      userService.addRoleToUser("anders", "ROLE_USER");      userService.addRoleToUser("andreas", "ROLE_USER");      userService.addRoleToUser("andreas", "ROLE_MANAGER");      userService.addRoleToUser("paul", "ROLE_USER");      userService.addRoleToUser("paul", "ROLE_ADMIN");      userService.addRoleToUser("admin", "ROLE_USER");      userService.addRoleToUser("admin", "ROLE_ADMIN");      userService.addRoleToUser("admin", "ROLE_SUPER_ADMIN");    };  }}